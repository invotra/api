// tslint:disable
/**
 * Invotra API
 * In general most fields are optional for update (PUT) requests; you can leave them blank (pass an empty string / array / whatever as appropriate) to clear them, or omit the key to leave them unchanged.
 *
 * The version of the OpenAPI document: 0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { TitleUuidListItemCommonSchema } from './title-uuid-list-item-common-schema';

/**
 * 
 * @export
 * @interface UserSchemaCommon
 */
export interface UserSchemaCommon {
    /**
     * The UUID of the user
     * @type {string}
     * @memberof UserSchemaCommon
     */
    uuid?: string;
    /**
     * The user\'s username
     * @type {string}
     * @memberof UserSchemaCommon
     */
    username?: string;
    /**
     * The user\'s image
     * @type {string}
     * @memberof UserSchemaCommon
     */
    user_avatar?: string;
    /**
     * Users email address
     * @type {string}
     * @memberof UserSchemaCommon
     */
    email?: string;
    /**
     * The user\'s external reference ID
     * @type {string}
     * @memberof UserSchemaCommon
     */
    external_id?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserSchemaCommon
     */
    roles?: Array<UserSchemaCommonRolesEnum>;
    /**
     * Flag to indicate whether account is active or blocked
     * @type {string}
     * @memberof UserSchemaCommon
     */
    status?: UserSchemaCommonStatusEnum;
    /**
     * The user\'s telephone number.
     * @type {string}
     * @memberof UserSchemaCommon
     */
    phone?: string;
    /**
     * The user\'s mobile number.
     * @type {string}
     * @memberof UserSchemaCommon
     */
    mobile?: string;
    /**
     * This is the Invotra UUID of the user\'s manager.
     * @type {string}
     * @memberof UserSchemaCommon
     */
    manager_uuid?: string;
    /**
     * The user\'s first name
     * @type {string}
     * @memberof UserSchemaCommon
     */
    firstname?: string;
    /**
     * The user\'s surname
     * @type {string}
     * @memberof UserSchemaCommon
     */
    surname?: string;
    /**
     * The user\'s title
     * @type {string}
     * @memberof UserSchemaCommon
     */
    title?: UserSchemaCommonTitleEnum;
    /**
     * This is the Invotra UUID of the user\'s person type.
     * @type {string}
     * @memberof UserSchemaCommon
     */
    person_type?: string;
    /**
     * This is the Invotra UUID of the user\'s team.
     * @type {string}
     * @memberof UserSchemaCommon
     */
    team?: string;
    /**
     * This is the Invotra UUID of the user\'s location.
     * @type {string}
     * @memberof UserSchemaCommon
     */
    location?: string;
    /**
     * This is the Invotra UUID of the user\'s job role.
     * @type {string}
     * @memberof UserSchemaCommon
     */
    job_role?: string;
    /**
     * The user\'s teams. An array of team names and UUIDs.
     * @type {Array<TitleUuidListItemCommonSchema>}
     * @memberof UserSchemaCommon
     */
    teams?: Array<TitleUuidListItemCommonSchema>;
    /**
     * The user\'s locations. An array of location names and UUIDs.
     * @type {Array<TitleUuidListItemCommonSchema>}
     * @memberof UserSchemaCommon
     */
    locations?: Array<TitleUuidListItemCommonSchema>;
    /**
     * The user\'s role grades. An array of role grade names and UUIDs.
     * @type {Array<TitleUuidListItemCommonSchema>}
     * @memberof UserSchemaCommon
     */
    role_grades?: Array<TitleUuidListItemCommonSchema>;
    /**
     * The UUID of the user
     * @type {string}
     * @memberof UserSchemaCommon
     */
    user_uuid?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum UserSchemaCommonRolesEnum {
    OrganisationalUser = 'Organisational user',
    Webmaster = 'Webmaster',
    Author = 'Author',
    Moderator = 'Moderator',
    Editor = 'Editor',
    Publisher = 'Publisher',
    ContentReviewer = 'Content reviewer',
    SectionManager = 'Section manager',
    Previewer = 'Previewer',
    Redacted = 'Redacted',
    BrandManager = 'Brand manager',
    Blogger = 'Blogger',
    IdeasAdministrator = 'Ideas administrator',
    OUAdministrator = 'OU administrator',
    LocationAdmin = 'Location admin',
    ContentLayoutManager = 'Content layout manager',
    ExternalUser = 'External user',
    QueriesAdministrator = 'Queries administrator'
}
/**
    * @export
    * @enum {string}
    */
export enum UserSchemaCommonStatusEnum {
    Active = 'Active',
    Blocked = 'Blocked'
}
/**
    * @export
    * @enum {string}
    */
export enum UserSchemaCommonTitleEnum {
    Empty = '',
    Dr = 'Dr',
    Mr = 'Mr',
    Miss = 'Miss',
    Mrs = 'Mrs',
    Ms = 'Ms'
}



