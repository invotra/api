// tslint:disable
/**
 * InvotraAPI
 * In general most fields are optional for update (PUT) requests; you can leave them blank (pass an empty string / array / whatever as appropriate) to clear them, or omit the key to leave them unchanged.
 *
 * The version of the OpenAPI document: 0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { FileSchema } from './file-schema';
import { TitleUuidListItemCommonSchema } from './title-uuid-list-item-common-schema';

/**
 * 
 * @export
 * @interface FeedSchema
 */
export interface FeedSchema {
    /**
     * This is the uuid of the user who triggered the feed message
     * @type {string}
     * @memberof FeedSchema
     */
    user_uuid: string;
    /**
     * This is image of the user who triggered the feed message
     * @type {string}
     * @memberof FeedSchema
     */
    user_image: string;
    /**
     * The username of the user who triggered the feed message
     * @type {string}
     * @memberof FeedSchema
     */
    username: string;
    /**
     * The display name of the user who triggered the feed message
     * @type {string}
     * @memberof FeedSchema
     */
    display_name?: string;
    /**
     * The user\'s teams. An array of team names and UUIDs.
     * @type {Array<TitleUuidListItemCommonSchema>}
     * @memberof FeedSchema
     */
    teams?: Array<TitleUuidListItemCommonSchema>;
    /**
     * The user\'s locations. An array of location names and UUIDs.
     * @type {Array<TitleUuidListItemCommonSchema>}
     * @memberof FeedSchema
     */
    locations?: Array<TitleUuidListItemCommonSchema>;
    /**
     * The user\'s job roles. An array of job role names and UUIDs.
     * @type {Array<TitleUuidListItemCommonSchema>}
     * @memberof FeedSchema
     */
    job_roles?: Array<TitleUuidListItemCommonSchema>;
    /**
     * The UUID of the entity that the feed message is about
     * @type {string}
     * @memberof FeedSchema
     */
    entity_uuid: string;
    /**
     * The title of the entity that the feed message is about
     * @type {string}
     * @memberof FeedSchema
     */
    entity_title: string;
    /**
     * The main body text of the entity
     * @type {string}
     * @memberof FeedSchema
     */
    entity_body: string;
    /**
     * The type of entity that the feed message is about
     * @type {string}
     * @memberof FeedSchema
     */
    entity_type?: FeedSchemaEntityTypeEnum;
    /**
     * The featured image for this post
     * @type {FileSchema}
     * @memberof FeedSchema
     */
    entity_image?: FileSchema;
    /**
     * This is the timestamp (in seconds) of when the feed message was created
     * @type {number}
     * @memberof FeedSchema
     */
    timestamp: number;
    /**
     * This is link to the entity that the feed message is about
     * @type {string}
     * @memberof FeedSchema
     */
    link: string;
    /**
     * Contextual text for the feed message, with placeholders @user for the user\'s name and optionally @group for the group name.
     * @type {string}
     * @memberof FeedSchema
     */
    short_text: string;
    /**
     * This is topic of the feed, used for filtering
     * @type {string}
     * @memberof FeedSchema
     */
    topic: FeedSchemaTopicEnum;
    /**
     * The category of a post
     * @type {string}
     * @memberof FeedSchema
     */
    category: FeedSchemaCategoryEnum;
    /**
     * Colour for the category. Any CSS colour allowed.
     * @type {string}
     * @memberof FeedSchema
     */
    category_colour: string;
    /**
     * Count of the likes for this feed message
     * @type {number}
     * @memberof FeedSchema
     */
    likes: number;
    /**
     * Count of the comments for this feed message
     * @type {number}
     * @memberof FeedSchema
     */
    comment_count: number;
    /**
     * A flag to determine if the current user has liked this post
     * @type {boolean}
     * @memberof FeedSchema
     */
    current_user_liked: boolean;
    /**
     * This is the name of the group
     * @type {string}
     * @memberof FeedSchema
     */
    group_name?: string;
    /**
     * This is the uuid of the group
     * @type {string}
     * @memberof FeedSchema
     */
    group_uuid?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum FeedSchemaEntityTypeEnum {
    Node = 'node',
    Comment = 'comment',
    User = 'user'
}
/**
    * @export
    * @enum {string}
    */
export enum FeedSchemaTopicEnum {
    People = 'people',
    Groups = 'groups',
    Content = 'content'
}
/**
    * @export
    * @enum {string}
    */
export enum FeedSchemaCategoryEnum {
    Comment = 'Comment',
    Note = 'Note',
    Done = 'Done',
    NewsEvent = 'News / Event',
    Suggestion = 'Suggestion',
    Question = 'Question',
    ToDo = 'To Do',
    ProblemRisk = 'Problem / Risk',
    Agreed = 'Agreed',
    Decision = 'Decision'
}



