/**
 * InvotraAPI
 * In general most fields are optional for update (PUT) requests; you can leave them blank (pass an empty string / array / whatever as appropriate) to clear them, or omit the key to leave them unchanged.
 *
 * The version of the OpenAPI document: 0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { InlineResponse20025 } from '../model';
import { InlineResponse20026 } from '../model';
import { ManualPageSchema } from '../model';
/**
 * ManualsApi - axios parameter creator
 * @export
 */
export declare const ManualsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Get a listing of all manuals
     * @param {number} [offset] The number of items to skip before starting to collect the result set.
     * @param {number} [limit] The numbers of items to return. If the value specified is more than the maximum, the result count will be limited to the maximum.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manualsGet(offset?: number | undefined, limit?: number | undefined, options?: any): RequestArgs;
    /**
     * Get a manual page, including the root manual page
     * @param {string} manual_page_id The Invotra UUID of a manual page.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manualsManualPageIdGet(manual_page_id: string, options?: any): RequestArgs;
    /**
     * Get all pages in a manual or manual page.
     * @param {string} [cursor] The paging cursor.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manualsPagesGet(cursor?: string | undefined, options?: any): RequestArgs;
};
/**
 * ManualsApi - functional programming interface
 * @export
 */
export declare const ManualsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Get a listing of all manuals
     * @param {number} [offset] The number of items to skip before starting to collect the result set.
     * @param {number} [limit] The numbers of items to return. If the value specified is more than the maximum, the result count will be limited to the maximum.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manualsGet(offset?: number | undefined, limit?: number | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<InlineResponse20025>;
    /**
     * Get a manual page, including the root manual page
     * @param {string} manual_page_id The Invotra UUID of a manual page.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manualsManualPageIdGet(manual_page_id: string, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<ManualPageSchema>;
    /**
     * Get all pages in a manual or manual page.
     * @param {string} [cursor] The paging cursor.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manualsPagesGet(cursor?: string | undefined, options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<InlineResponse20026>;
};
/**
 * ManualsApi - factory interface
 * @export
 */
export declare const ManualsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Get a listing of all manuals
     * @param {number} [offset] The number of items to skip before starting to collect the result set.
     * @param {number} [limit] The numbers of items to return. If the value specified is more than the maximum, the result count will be limited to the maximum.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manualsGet(offset?: number | undefined, limit?: number | undefined, options?: any): AxiosPromise<InlineResponse20025>;
    /**
     * Get a manual page, including the root manual page
     * @param {string} manual_page_id The Invotra UUID of a manual page.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manualsManualPageIdGet(manual_page_id: string, options?: any): AxiosPromise<ManualPageSchema>;
    /**
     * Get all pages in a manual or manual page.
     * @param {string} [cursor] The paging cursor.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manualsPagesGet(cursor?: string | undefined, options?: any): AxiosPromise<InlineResponse20026>;
};
/**
 * ManualsApi - interface
 * @export
 * @interface ManualsApi
 */
export interface ManualsApiInterface {
    /**
     * Get a listing of all manuals
     * @param {number} [offset] The number of items to skip before starting to collect the result set.
     * @param {number} [limit] The numbers of items to return. If the value specified is more than the maximum, the result count will be limited to the maximum.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManualsApiInterface
     */
    manualsGet(offset?: number, limit?: number, options?: any): AxiosPromise<InlineResponse20025>;
    /**
     * Get a manual page, including the root manual page
     * @param {string} manual_page_id The Invotra UUID of a manual page.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManualsApiInterface
     */
    manualsManualPageIdGet(manual_page_id: string, options?: any): AxiosPromise<ManualPageSchema>;
    /**
     * Get all pages in a manual or manual page.
     * @param {string} [cursor] The paging cursor.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManualsApiInterface
     */
    manualsPagesGet(cursor?: string, options?: any): AxiosPromise<InlineResponse20026>;
}
/**
 * ManualsApi - object-oriented interface
 * @export
 * @class ManualsApi
 * @extends {BaseAPI}
 */
export declare class ManualsApi extends BaseAPI implements ManualsApiInterface {
    /**
     * Get a listing of all manuals
     * @param {number} [offset] The number of items to skip before starting to collect the result set.
     * @param {number} [limit] The numbers of items to return. If the value specified is more than the maximum, the result count will be limited to the maximum.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManualsApi
     */
    manualsGet(offset?: number, limit?: number, options?: any): AxiosPromise<InlineResponse20025>;
    /**
     * Get a manual page, including the root manual page
     * @param {string} manual_page_id The Invotra UUID of a manual page.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManualsApi
     */
    manualsManualPageIdGet(manual_page_id: string, options?: any): AxiosPromise<ManualPageSchema>;
    /**
     * Get all pages in a manual or manual page.
     * @param {string} [cursor] The paging cursor.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ManualsApi
     */
    manualsPagesGet(cursor?: string, options?: any): AxiosPromise<InlineResponse20026>;
}
