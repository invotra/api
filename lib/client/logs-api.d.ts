/**
 * Invotra API
 * In general most fields are optional for update (PUT) requests; you can leave them blank (pass an empty string / array / whatever as appropriate) to clear them, or omit the key to leave them unchanged.
 *
 * The version of the OpenAPI document: 0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { LogSchema } from '../model';
/**
 * LogsApi - axios parameter creator
 * @export
 */
export declare const LogsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * Write log entries to the applications log.
     * @param {Array<LogSchema>} LogSchema An array containing one or more log entry objects. A maximum of 25 entries is permitted per request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logsPost(LogSchema: LogSchema[], options?: any): RequestArgs;
};
/**
 * LogsApi - functional programming interface
 * @export
 */
export declare const LogsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * Write log entries to the applications log.
     * @param {Array<LogSchema>} LogSchema An array containing one or more log entry objects. A maximum of 25 entries is permitted per request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logsPost(LogSchema: LogSchema[], options?: any): (axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<void>;
};
/**
 * LogsApi - factory interface
 * @export
 */
export declare const LogsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * Write log entries to the applications log.
     * @param {Array<LogSchema>} LogSchema An array containing one or more log entry objects. A maximum of 25 entries is permitted per request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    logsPost(LogSchema: LogSchema[], options?: any): AxiosPromise<void>;
};
/**
 * LogsApi - interface
 * @export
 * @interface LogsApi
 */
export interface LogsApiInterface {
    /**
     * Write log entries to the applications log.
     * @param {Array<LogSchema>} LogSchema An array containing one or more log entry objects. A maximum of 25 entries is permitted per request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogsApiInterface
     */
    logsPost(LogSchema: Array<LogSchema>, options?: any): AxiosPromise<void>;
}
/**
 * LogsApi - object-oriented interface
 * @export
 * @class LogsApi
 * @extends {BaseAPI}
 */
export declare class LogsApi extends BaseAPI implements LogsApiInterface {
    /**
     * Write log entries to the applications log.
     * @param {Array<LogSchema>} LogSchema An array containing one or more log entry objects. A maximum of 25 entries is permitted per request.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogsApi
     */
    logsPost(LogSchema: Array<LogSchema>, options?: any): AxiosPromise<void>;
}
